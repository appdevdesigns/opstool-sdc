<link rel="stylesheet" href="/js/webix/webix.css" />
<style>
    table td div[role="columnheader"] {
        text-align: center;
    }
    table td div[role="columnheader"].formula {
        font-size: .8em;
        text-decoration: italic;
    }
</style>

<div id="sdc-appointment-report">
</div>

<script src="/js/jquery.min.js"></script>
<script src="/js/moment.min.js"></script>
<script src="/js/webix/webix.js"></script>

<script>
    var now = new Date();
    
    webix.ui({
        container: 'sdc-appointment-report',
        rows: [
            {
                view: 'datepicker',
                id: 'startDate',
                label: 'Start',
                value: now.getFullYear() + '-01-01'
            },
            {
                view: 'datepicker',
                id: 'endDate',
                label: 'End',
                value: now.getFullYear() + '-12-31'
            },
            {
                view: 'button',
                value: 'Go',
                click: function() {
                    
                    var start = moment($$('startDate').getValue()).format('YYYY-MM-DD');
                    var end = moment($$('endDate').getValue()).format('YYYY-MM-DD');
                    
                    $$('report-table').clearAll();
                    $$('report-table').load('/opstool-sdc/sdc/appointmentsReportData?startDate='+start+'&endDate='+end);
                    
                }
            },
            {
                view: 'spacer',
                height: 20,
            },
            {
                view: 'treetable',
                id: 'report-table',
                autoheight: true,
                resizeColumn: true,
                math: true,
                columns: [
                    { 
                        adjust: true, 
                        id: 'name', 
                        header: ['Team Name', { content: 'textFilter' }],
                        sort: 'string',
						template:function(obj, common){
							if (obj.$group) return common.treetable(obj, common) + obj.name;
							return '&nbsp;&nbsp;&nbsp;&nbsp;' + obj.name;
						}
                    },
                    { 
                        adjust: true, 
                        id: 'members', 
                        header: 'Members', 
                        sort: 'int' 
                    },
                    { 
                        adjust: true, 
                        id: 'confirmed1', 
                        sort: 'int', 
                        header: [{ colspan: 2, text: 'Conversation 1' }, 'Confirmed'],
                    },
                    { 
                        adjust: true, 
                        id: 'completed1', 
                        sort: 'int', 
                        header: [ null, 'Completed'],
                    },
                    { 
                        adjust: true, 
                        id: 'confirmed2', 
                        header: [{ colspan: 2, text: 'Conversation 2' }, 'Confirmed'],
                        sort: 'int' 
                    },
                    { 
                        adjust: true, 
                        id: 'completed2', 
                        header: [null, 'Completed'], 
                        sort: 'int' 
                    },
                    { 
                        adjust: true, 
                        id: 'confirmed3', 
                        header: [{ colspan: 2, text: 'Conversation 3' }, 'Confirmed'],
                        sort: 'int' 
                    },
                    { 
                        adjust: true, 
                        id: 'completed3', 
                        header: [null, 'Completed'],
                        sort: 'int' 
                    },
                    {
                        adjust: true,
                        id: 'total_confirmed',
                        header: [{ colspan: 2, text: 'Totals' }, 'Confirmed'],
                        sort: 'int',
                        math: '[$r,confirmed1] + [$r,confirmed2] + [$r,confirmed3]'
                    },
                    {
                        adjust: true,
                        id: 'total_completed',
                        header: [null, 'Completed'],
                        sort: 'int',
                        math: '[$r,completed1] + [$r,completed2] + [$r,completed3]',
                    },
                    {
                        adjust: true,
                        id: 'avg_confirmed',
                        header: [
                            'Avg Confirmed', 
                            {text: 'confirmed/members', css: 'formula'}
                        ],
                        sort: 'int',
                        math: '[$r,total_confirmed] / [$r,members]',
                        format: webix.Number.numToStr({
                            decimalDelimiter: '.',
                            decimalSize: 2
                        })
                    },
                    {
                        adjust: true,
                        id: 'avg_completed',
                        header: [
                            'Avg Completed', 
                            {text: 'completed/members', css: 'formula'}
                        ],
                        sort: 'int',
                        math: '[$r,total_completed] / [$r,members]',
                        format: webix.Number.numToStr({
                            decimalDelimiter: '.',
                            decimalSize: 2
                        })
                    },
                    {
                        adjust: true,
                        id: 'ratio',
                        header: [
                            'Ratio', 
                            {text: 'completed/confirmed', css: 'formula'}
                        ],
                        sort: 'int',
                        math: '[$r,total_completed] / [$r,total_confirmed] * 100',
                        format: function(value) {
                            if (value < 0 || isNaN(value)) value = 0;
                            return webix.Number.numToStr({
                                decimalDelimiter: '.',
                                decimalSize: 1
                            })(value) + '%';
                        }
                    },
                ],
				scheme:{
					$group: {
						by: "region",
						map: {
				            members: ['members', 'sum'],
							confirmed1: ["confirmed1", "sum"],
							completed1: ["completed1", "sum"],
							confirmed2: ["confirmed2", "sum"],
							completed2: ["completed2", "sum"],
							confirmed3: ["confirmed3", "sum"],
							completed3: ["completed3", "sum"],
							name: ["region"]
						}
					},
					$sort: { 
					   by: "name", 
					   as: "string", 
					   dir: "asc" 
				    }
				},
                data: [
                ]
                
            },
            
        ]
    });
</script>